"""empty message

Revision ID: 5d2d2abbc237
Revises: ff567cf89dec
Create Date: 2021-10-15 14:53:58.999635

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5d2d2abbc237"
down_revision = "ff567cf89dec"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "boundaries",
        sa.Column("code", sa.String(length=9), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "classifications",
        sa.Column("code", sa.String(length=6), nullable=False),
        sa.Column("class_desc", sa.String(length=200), nullable=True),
        sa.Column("primary_code", sa.String(length=1), nullable=True),
        sa.Column("secondary_code", sa.String(length=1), nullable=True),
        sa.Column("tertiary_code", sa.Integer(), nullable=True),
        sa.Column("quaternary_code", sa.String(length=2), nullable=True),
        sa.Column("primary_desc", sa.String(length=200), nullable=True),
        sa.Column("secondary_desc", sa.String(length=200), nullable=True),
        sa.Column("tertiary_desc", sa.String(length=200), nullable=True),
        sa.Column("quaternary_desc", sa.String(length=200), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "postcodes",
        sa.Column("pcds", sa.String(length=8), nullable=False),
        sa.Column("e05", sa.String(length=9), nullable=True),
        sa.Column("e06", sa.String(length=9), nullable=True),
        sa.Column("e07", sa.String(length=9), nullable=True),
        sa.Column("e10", sa.String(length=9), nullable=True),
        sa.Column("e14", sa.String(length=9), nullable=True),
        sa.Column("e47", sa.String(length=9), nullable=True),
        sa.Column("e58", sa.String(length=9), nullable=True),
        sa.PrimaryKeyConstraint("pcds"),
    )
    op.create_table(
        "streets",
        sa.Column("usrn", sa.BigInteger(), nullable=False),
        sa.Column("state_code", sa.Integer(), nullable=True),
        sa.Column("surface_code", sa.Integer(), nullable=True),
        sa.Column("classification_code", sa.Integer(), nullable=True),
        sa.Column("description", sa.String(length=100), nullable=True),
        sa.Column("locality", sa.String(length=35), nullable=True),
        sa.Column("town", sa.String(length=30), nullable=True),
        sa.Column("admin_area", sa.String(length=30), nullable=True),
        sa.PrimaryKeyConstraint("usrn"),
    )
    op.create_table(
        "addresses",
        sa.Column("uprn", sa.BigInteger(), nullable=False),
        sa.Column("usrn", sa.BigInteger(), nullable=True),
        sa.Column("state", sa.Integer(), nullable=True),
        sa.Column("parent_uprn", sa.BigInteger(), nullable=True),
        sa.Column("sao_start_number", sa.Integer(), nullable=True),
        sa.Column("sao_start_suffix", sa.String(length=2), nullable=True),
        sa.Column("sao_end_number", sa.Integer(), nullable=True),
        sa.Column("sao_end_suffix", sa.String(length=2), nullable=True),
        sa.Column("sao_text", sa.String(length=90), nullable=True),
        sa.Column("pao_start_number", sa.Integer(), nullable=True),
        sa.Column("pao_start_suffix", sa.String(length=2), nullable=True),
        sa.Column("pao_end_number", sa.Integer(), nullable=True),
        sa.Column("pao_end_suffix", sa.String(length=2), nullable=True),
        sa.Column("pao_text", sa.String(length=90), nullable=True),
        sa.Column("postcode", sa.String(length=8), nullable=True),
        sa.Column("area_name", sa.String(length=40), nullable=True),
        sa.Column("level", sa.String(length=30), nullable=True),
        sa.Column("multi_occupancy", sa.Integer(), nullable=True),
        sa.Column(
            "latitude", sa.Float(precision=8, decimal_return_scale=7), nullable=True
        ),
        sa.Column(
            "longitude", sa.Float(precision=8, decimal_return_scale=7), nullable=True
        ),
        sa.Column("classification_code", sa.String(length=6), nullable=True),
        sa.ForeignKeyConstraint(
            ["classification_code"], ["classifications.code"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["parent_uprn"], ["addresses.uprn"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["postcode"], ["postcodes.pcds"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["usrn"], ["streets.usrn"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("uprn"),
    )
    op.create_index(op.f("ix_addresses_usrn"), "addresses", ["usrn"], unique=False)
    op.create_table(
        "cases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ref", sa.String(length=10), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("_created_on", sa.DateTime(), nullable=True),
        sa.Column("_updated_on", sa.DateTime(), nullable=True),
        sa.Column("_created_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["_created_by"], ["contacts.id"], onupdate="CASCADE", ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ref"),
    )
    op.create_table(
        "address_notes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uprn", sa.BigInteger(), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column("internal", sa.Boolean(), nullable=False),
        sa.Column("withdrawn", sa.Boolean(), nullable=False),
        sa.Column("sensitive", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["uprn"], ["addresses.uprn"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "case_contacts",
        sa.Column("case_id", sa.Integer(), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=False),
        sa.Column("relation", sa.String(length=25), nullable=False),
        sa.ForeignKeyConstraint(["case_id"], ["cases.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("case_id", "contact_id"),
    )
    op.create_table(
        "case_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("case_id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.Enum(
                "ACTIVE",
                "WAITING",
                "REQUIRES_ACTION",
                "ON_HOLD",
                "RESOLVED",
                "NO_ACTION",
                "CLOSED",
                "ARCHIVED",
                name="case_status_names",
            ),
            nullable=False,
        ),
        sa.Column("_created_on", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["case_id"], ["cases.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "case_text",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("case_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("started", sa.DateTime(), nullable=True),
        sa.Column("finished", sa.DateTime(), nullable=True),
        sa.Column("location", sa.String(length=255), nullable=True),
        sa.Column("_created_on", sa.DateTime(), nullable=False),
        sa.Column("_created_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["_created_by"], ["contacts.id"], onupdate="CASCADE", ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["case_id"], ["cases.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "survey_returns",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uprn", sa.BigInteger(), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column(
            "tenure",
            sa.Enum(
                "PRIVATE_RENT",
                "SOCIAL_RENT",
                "LICENSEE",
                "OWNER_OCCUPIER",
                "HMO",
                "OTHER",
                name="survey_tenure_types",
            ),
            nullable=True,
        ),
        sa.Column("housing_cost", sa.Integer(), nullable=True),
        sa.Column("answered", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["uprn"], ["addresses.uprn"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_column("contact_addresses", "uprn")
    op.add_column(
        "contact_addresses", sa.Column("uprn", sa.BigInteger(), nullable=False)
    )
    op.create_foreign_key(
        None,
        "contact_addresses",
        "addresses",
        ["uprn"],
        ["uprn"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "contact_addresses", type_="foreignkey")
    op.drop_table("survey_returns")
    op.drop_table("case_text")
    op.drop_table("case_status")
    op.drop_table("case_contacts")
    op.drop_table("address_notes")
    op.drop_table("cases")
    op.drop_index(op.f("ix_addresses_usrn"), table_name="addresses")
    op.drop_table("addresses")
    op.drop_table("streets")
    op.drop_table("postcodes")
    op.drop_table("classifications")
    op.drop_table("boundaries")
    # ### end Alembic commands ###
