"""empty message

Revision ID: ce3402b8476b
Revises: 85af3e892167
Create Date: 2022-02-14 15:42:39.389512

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ce3402b8476b"
down_revision = "85af3e892167"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("requests_session_id_fkey", "requests", type_="foreignkey")
    op.create_table(
        "csrf_sessions",
        sa.Column(
            "id",
            postgresql.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("user_agent_hash", sa.VARCHAR(length=64), nullable=False),
        sa.Column("remote_addr", postgresql.INET(), nullable=False),
        sa.Column("source", sa.VARCHAR(length=22), nullable=False),
        sa.Column("created", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("last_used", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("trusted", sa.BOOLEAN(), nullable=False),
        sa.Column("contact_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(["contact_id"], ["contacts.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("request_sessions")
    op.drop_table("request_clients")
    op.add_column(
        "requests", sa.Column("return_hash", sa.VARCHAR(length=64), nullable=True)
    )
    op.create_foreign_key(
        None, "requests", "csrf_sessions", ["session_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "requests", type_="foreignkey")
    op.create_foreign_key(
        "requests_session_id_fkey",
        "requests",
        "request_sessions",
        ["session_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("requests", "return_hash")
    op.create_table(
        "request_clients",
        sa.Column("id", sa.VARCHAR(length=64), autoincrement=False, nullable=False),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "vector",
            postgresql.ENUM(
                "PASSWORD", "SMS", "EMAIL", "PAYMENT", "NEW", name="vectors"
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("contact_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
            name="request_clients_contact_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="request_clients_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "request_sessions",
        sa.Column(
            "id",
            postgresql.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "user_agent_hash",
            sa.VARCHAR(length=64),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "remote_addr", postgresql.INET(), autoincrement=False, nullable=False
        ),
        sa.Column("source", sa.VARCHAR(length=22), autoincrement=False, nullable=False),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_used", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("trusted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("contact_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "client_id", sa.VARCHAR(length=64), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["request_clients.id"],
            name="request_sessions_client_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
            name="request_sessions_contact_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="request_sessions_pkey"),
    )
    op.drop_table("csrf_sessions")
    # ### end Alembic commands ###
