"""empty message

Revision ID: a6dde790a25c
Revises: 0cfc9ab13529
Create Date: 2022-06-25 05:01:55.855238

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a6dde790a25c"
down_revision = "0cfc9ab13529"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "identities",
        sa.Column("id", sa.String(length=512), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["contact_id"], ["contacts.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "wiki_pages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contacts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["wiki_pages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_wiki_pages_title"), "wiki_pages", ["title"], unique=True)
    op.create_table(
        "wiki_interlinks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=False),
        sa.Column("links_to_title", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["page_id"],
            ["wiki_pages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "wiki_tag",
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["wiki_pages.id"],
        ),
        sa.PrimaryKeyConstraint("parent_id", "tag"),
    )
    op.create_table(
        "wiki_text",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("body", sa.TEXT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contacts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["page_id"],
            ["wiki_pages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("requests")
    op.drop_table("auth_roles")
    op.drop_table("csrf_sessions")
    op.drop_table("contact_availability")
    op.add_column("committees", sa.Column("access_level", sa.Integer()))
    op.add_column(
        "contacts",
        sa.Column("payments_paused", sa.Boolean()),
    )
    op.drop_column("contacts", "account_blocked")
    op.drop_column("contacts", "password_hash")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "contacts",
        sa.Column(
            "password_hash", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "contacts",
        sa.Column("account_blocked", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_column("contacts", "payments_paused")
    op.drop_column("committees", "access_level")
    op.create_table(
        "contact_availability",
        sa.Column("contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "AVAILABLE",
                "OFFLINE",
                "EMAR",
                "ASSIGNED",
                "BUSY",
                "ON_BREAK",
                name="availabilitystatuses",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("latitude", sa.REAL(), autoincrement=False, nullable=True),
        sa.Column("longitude", sa.REAL(), autoincrement=False, nullable=True),
        sa.Column(
            "start_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
            name="contact_availability_contact_id_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "csrf_sessions",
        sa.Column(
            "id",
            postgresql.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "user_agent_hash",
            sa.VARCHAR(length=64),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "remote_addr", postgresql.INET(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "source", sa.VARCHAR(length=1024), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_used", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("trusted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("contact_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
            name="csrf_sessions_contact_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="csrf_sessions_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "auth_roles",
        sa.Column("contact_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
            name="auth_roles_contact_id_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("contact_id", "name", name="auth_roles_pkey"),
    )
    op.create_table(
        "requests",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "started", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "finished", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("session_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("host", sa.VARCHAR(length=256), autoincrement=False, nullable=True),
        sa.Column("path", sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
        sa.Column("method", sa.VARCHAR(length=6), autoincrement=False, nullable=False),
        sa.Column("trusted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("response_code", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("contact_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "return_hash", sa.VARCHAR(length=64), autoincrement=False, nullable=True
        ),
        sa.Column("duration", sa.REAL(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
            name="requests_contact_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["csrf_sessions.id"],
            name="requests_session_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="requests_pkey"),
    )
    op.drop_table("wiki_text")
    op.drop_table("wiki_tag")
    op.drop_table("wiki_interlinks")
    op.drop_index(op.f("ix_wiki_pages_title"), table_name="wiki_pages")
    op.drop_table("wiki_pages")
    op.drop_table("identities")
    # ### end Alembic commands ###
